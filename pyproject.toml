[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dokkument"
version = "1.0.0"
description = "Gestore CLI per documentazione aziendale tramite file .dokk"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Roberto Zanolli", email = "roberto.zanolli@example.com"}
]
maintainers = [
    {name = "Roberto Zanolli", email = "roberto.zanolli@example.com"}
]
keywords = [
    "cli", "documentation", "links", "enterprise", "tool", "productivity"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Office/Business",
    "Topic :: Software Development :: Documentation",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities"
]
requires-python = ">=3.8"
dependencies = [
    # Core dependencies - utilizzando solo librerie standard Python
    # Il progetto è progettato per non richiedere dipendenze esterne obbligatorie
]

# Dipendenze opzionali per funzionalità aggiuntive
[project.optional-dependencies]
# Dipendenze per una migliore esperienza utente (opzionali)
enhanced = [
    "rich>=10.0.0",        # Per output più ricco e colorato
    "click>=8.0.0",        # Per una CLI più avanzata
    "colorama>=0.4.4",     # Per il supporto colori su Windows
]

# Dipendenze per sviluppo
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# Dipendenze per testing
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "coverage[toml]>=6.0.0",
]

# Dipendenze per documentazione
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[project.urls]
Homepage = "https://github.com/RobertoZanolli/dokkument"
Documentation = "https://github.com/RobertoZanolli/dokkument#readme"
Repository = "https://github.com/RobertoZanolli/dokkument.git"
"Bug Tracker" = "https://github.com/RobertoZanolli/dokkument/issues"
Changelog = "https://github.com/RobertoZanolli/dokkument/blob/main/CHANGELOG.md"

# Entry point per il comando dokkument
[project.scripts]
dokkument = "dokkument.main:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["dokkument*"]
exclude = ["tests*"]

# Configurazione per pytest
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=dokkument",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Configurazione per coverage
[tool.coverage.run]
source = ["src/dokkument"]
branch = true
omit = [
    "tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

# Configurazione per Black (formatter)
[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Configurazione per isort (import sorter)
[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["dokkument"]
known_third_party = []
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# Configurazione per mypy (type checker)
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
]
disallow_untyped_defs = false